version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: trading
      POSTGRES_USER: trader
      POSTGRES_PASSWORD: secure_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      
  trading-bot:
    build: .
    depends_on:
      - redis
      - postgres
    environment:
      - HYPERLIQUID_PRIVATE_KEY=${HYPERLIQUID_PRIVATE_KEY}
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://trader:secure_password@postgres:5432/trading
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./configs:/app/configs
    restart: unless-stopped
    
  dashboard:
    build: .
    command: python dashboard/app.py
    depends_on:
      - trading-bot
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://trader:secure_password@postgres:5432/trading
      - REDIS_URL=redis://redis:6379
    restart: unless-stopped
    
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      
  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false

volumes:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:
